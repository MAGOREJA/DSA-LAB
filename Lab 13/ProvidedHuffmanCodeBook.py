from HuffmanCodeBook import HuffmanCodeBook


class ProvidedHuffmanCodeBook:

    @staticmethod
    def get_ebook_huffman_codebook():
        """
        Returns a Huffman codebook pre-populated with mappings for characters
        and their corresponding binary sequences based on the given Java implementation.
        """
        codebook = HuffmanCodeBook()
        
        # Adding character-to-binary sequence mappings
        codebook.add_sequence(' ', "110")
        codebook.add_sequence('e', "000")
        codebook.add_sequence('a', "1000")
        codebook.add_sequence('h', "0100")
        codebook.add_sequence('i', "0010")
        codebook.add_sequence('n', "0101")
        codebook.add_sequence('o', "0111")
        codebook.add_sequence('s', "0011")
        codebook.add_sequence('t', "1010")
        codebook.add_sequence('d', "10110")
        codebook.add_sequence('l', "10010")
        codebook.add_sequence('r', "11110")
        codebook.add_sequence('\n', "111010")
        codebook.add_sequence(',', "011001")
        codebook.add_sequence('c', "111000")
        codebook.add_sequence('f', "101111")
        codebook.add_sequence('g', "100110")
        codebook.add_sequence('m', "111001")
        codebook.add_sequence('u', "111110")
        codebook.add_sequence('w', "101110")
        codebook.add_sequence('y', "011010")
        codebook.add_sequence('.', "1001110")
        codebook.add_sequence('b', "1110111")
        codebook.add_sequence('p', "1111111")
        codebook.add_sequence('v', "0110110")
        codebook.add_sequence('I', "10011111")
        codebook.add_sequence('k', "11111101")
        codebook.add_sequence(';', "011011100")
        codebook.add_sequence('A', "011011110")
        codebook.add_sequence('H', "011000110")
        codebook.add_sequence('S', "011000111")
        codebook.add_sequence('T', "111111001")
        codebook.add_sequence('’', "011011111")
        codebook.add_sequence('“', "011000001")
        codebook.add_sequence('-', "1110110110")
        codebook.add_sequence(':', "0110000100")
        codebook.add_sequence('B', "1001111000")
        codebook.add_sequence('C', "0110111011")
        codebook.add_sequence('D', "1110110000")
        codebook.add_sequence('E', "1110110001")
        codebook.add_sequence('G', "0110000101")
        codebook.add_sequence('L', "0110001001")
        codebook.add_sequence('M', "1110110011")
        codebook.add_sequence('N', "0110001000")
        codebook.add_sequence('O', "1001111001")
        codebook.add_sequence('P', "0110001010")
        codebook.add_sequence('W', "1110110010")
        codebook.add_sequence('_', "0110000110")
        codebook.add_sequence('j', "0110001011")
        codebook.add_sequence('q', "0110000000")
        codebook.add_sequence('x', "1110110100")
        codebook.add_sequence('”', "1111110001")
        codebook.add_sequence('!', "11101101110")
        codebook.add_sequence('\"', "10011110101")
        codebook.add_sequence('(', "01100000010")
        codebook.add_sequence(')', "01100000011")
        codebook.add_sequence('?', "11111100000")
        codebook.add_sequence('F', "11101101011")
        codebook.add_sequence('R', "11111100001")
        codebook.add_sequence('Y', "01100001110")
        codebook.add_sequence('z', "01101110100")
        codebook.add_sequence('—', "10011110110")
        codebook.add_sequence('\'', "100111101000")
        codebook.add_sequence('1', "100111101001")
        codebook.add_sequence('J', "111011011111")
        codebook.add_sequence('K', "011000011110")
        codebook.add_sequence('Q', "111011010101")
        codebook.add_sequence('U', "100111101111")
        codebook.add_sequence('V', "011011101010")
        codebook.add_sequence('*', "0110000111111")
        codebook.add_sequence('0', "0110111010111")
        codebook.add_sequence('2', "1001111011101")
        codebook.add_sequence('‘', "0110111010110")
        codebook.add_sequence('3', "11101101111011")
        codebook.add_sequence('4', "11101101111001")
        codebook.add_sequence('5', "11101101010001")
        codebook.add_sequence('6', "10011110111001")
        codebook.add_sequence('7', "01100001111101")
        codebook.add_sequence('8', "11101101111000")
        codebook.add_sequence('9', "10011110111000")
        codebook.add_sequence('X', "11101101111010")
        codebook.add_sequence('ñ', "11101101010011")
        codebook.add_sequence('Z', "111011010100001")
        codebook.add_sequence('/', "1110110101001010")
        codebook.add_sequence('[', "1110110101001000")
        codebook.add_sequence(']', "1110110101001001")
        # ... Add additional sequences from the provided Java code
        
        return codebook
